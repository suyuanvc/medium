<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.sign.mapper.SignHabitMapper">
    
    <resultMap type="SignHabit" id="SignHabitResult">
        <result property="habitId"    column="habit_id"    />
        <result property="habitName"    column="habit_name"    />
        <result property="habitDesc"    column="habit_desc"    />
        <result property="habitHot"    column="habit_hot"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <sql id="selectSignHabitVo">
        select habit_id, habit_name, habit_desc, habit_hot, create_time, create_by, update_time, update_by from sign_habit
    </sql>

    <select id="selectSignHabitList" parameterType="SignHabit" resultMap="SignHabitResult">
        <include refid="selectSignHabitVo"/>
        <where>  
            <if test="habitName != null  and habitName != ''"> and habit_name like concat('%', #{habitName}, '%')</if>
            <if test="habitDesc != null  and habitDesc != ''"> and habit_desc = #{habitDesc}</if>
            <if test="habitHot != null "> and habit_hot = #{habitHot}</if>
        </where>
    </select>
    
    <select id="selectSignHabitById" parameterType="Integer" resultMap="SignHabitResult">
        <include refid="selectSignHabitVo"/>
        where habit_id = #{habitId}
    </select>
        
    <insert id="insertSignHabit" parameterType="SignHabit" useGeneratedKeys="true" keyProperty="habitId">
        insert into sign_habit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="habitName != null and habitName != ''">habit_name,</if>
            <if test="habitDesc != null">habit_desc,</if>
            <if test="habitHot != null">habit_hot,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="habitName != null and habitName != ''">#{habitName},</if>
            <if test="habitDesc != null">#{habitDesc},</if>
            <if test="habitHot != null">#{habitHot},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
         </trim>
    </insert>

    <update id="updateSignHabit" parameterType="SignHabit">
        update sign_habit
        <trim prefix="SET" suffixOverrides=",">
            <if test="habitName != null and habitName != ''">habit_name = #{habitName},</if>
            <if test="habitDesc != null">habit_desc = #{habitDesc},</if>
            <if test="habitHot != null">habit_hot = #{habitHot},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where habit_id = #{habitId}
    </update>

    <delete id="deleteSignHabitById" parameterType="Integer">
        delete from sign_habit where habit_id = #{habitId}
    </delete>

    <delete id="deleteSignHabitByIds" parameterType="String">
        delete from sign_habit where habit_id in 
        <foreach item="habitId" collection="array" open="(" separator="," close=")">
            #{habitId}
        </foreach>
    </delete>

</mapper>